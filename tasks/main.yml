---

- name: Check number of nodes in the cluster
  shell: "curl -s -m 2 '{{ es_listening_host }}:{{ es_http_port }}/_cat/nodes?h=name' | wc -l"
  register: nodes_count

- name: Turn off shard reallocation
  shell: "curl -XPUT {{ es_listening_host }}:{{ es_http_port }}/_cluster/settings -d '{\"transient\" : {\"cluster.routing.allocation.enable\" : \"none\" }}'"
  register: response
  failed_when: response.stdout.find('"acknowledged":true') == -1

- name: Stop the elasticsearch service
  throttle: 1
  become: true
  service:
    name: "elasticsearch"
    state: stopped

- name: reboot OS
  throttle: 1
  become: true
  reboot:
    pre_reboot_delay: 5
    post_reboot_delay: 15
    reboot_timeout: 300

- name: Wait for the node to rejoin the cluster
  shell: "curl -s -m 2 '{{ es_listening_host }}:{{ es_http_port }}/_cat/nodes?h=name' | wc -l"
  register: new_nodes
  until: new_nodes.stdout == nodes_count.stdout
  retries: 200
  delay: 3

- name: Turn on shard allocation
  shell: "curl -XPUT {{ es_listening_host }}:{{ es_http_port }}/_cluster/settings -d '{\"transient\" : {\"cluster.routing.allocation.enable\" : \"all\" }}'"
  register: response
  failed_when: response.stdout.find('"acknowledged":true') == -1

- name: Wait until cluster status is green
  shell: "curl -XGET {{ es_listening_host }}:{{ es_http_port }}/_cluster/health"
  register: response
  until: response.stdout.find('"status":"green"') != -1
  retries: 100
  delay: 10